package it.unive.golisa.golang.util;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import it.unive.golisa.golang.api.signature.ConstGoLangApiSignature;
import it.unive.golisa.golang.api.signature.FuncGoLangApiSignature;
import it.unive.golisa.golang.api.signature.MethodGoLangApiSignature;
import it.unive.golisa.golang.api.signature.TypeGoLangApiSignature;
import it.unive.golisa.golang.api.signature.VarGoLangApiSignature;

/**
 * Auto-generated by GoLiSA build
 */
public class Go1_3 {
	private final Map<String, Set<ConstGoLangApiSignature>> mapConst;
	private final Map<String, Set<FuncGoLangApiSignature>> mapFunc;
	private final Map<String, Set<MethodGoLangApiSignature>> mapMethod;
	private final Map<String, Set<TypeGoLangApiSignature>> mapType;
	private final Map<String, Set<VarGoLangApiSignature>> mapVar;
	private final Set<String> pkgs;

	public Go1_3() {
		pkgs = new HashSet<>();
		mapConst = new HashMap<String, Set<ConstGoLangApiSignature>>();
		mapFunc = new HashMap<String, Set<FuncGoLangApiSignature>>();
		mapMethod = new HashMap<String, Set<MethodGoLangApiSignature>>();
		mapType = new HashMap<String, Set<TypeGoLangApiSignature>>();
		mapVar = new HashMap<String, Set<VarGoLangApiSignature>>();

		build();
	}

	public Set<String> getPackages() {
		return pkgs;
	}

	public Map<String, Set<ConstGoLangApiSignature>> getMapConst() {
		return mapConst;
	}

	public Map<String, Set<FuncGoLangApiSignature>> getMapFunc() {
		return mapFunc;
	}

	public Map<String, Set<MethodGoLangApiSignature>> getMapMethod() {
		return mapMethod;
	}

	public Map<String, Set<TypeGoLangApiSignature>> getMapType() {
		return mapType;
	}

	public Map<String, Set<VarGoLangApiSignature>> getMapVar() {
		return mapVar;
	}

	private void build() {
		build0();
		build1();
		build2();
		build3();
		build4();
	}

	private void build0() {
		pkgs.add("crypto/tls");
		mapConst.putIfAbsent("crypto/tls", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("crypto/tls", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("crypto/tls", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("crypto/tls", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("crypto/tls", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("crypto/tls").add(new FuncGoLangApiSignature("crypto/tls", "NewLRUClientSessionCache",
				new String[] { "int" }, new String[] { "ClientSessionCache" }));
		mapConst.get("crypto/tls").add(new ConstGoLangApiSignature("crypto/tls", "CurveP384", " 24", null));
		mapConst.get("crypto/tls").add(new ConstGoLangApiSignature("crypto/tls", "CurveP521", null, "CurveID"));
		mapConst.get("crypto/tls").add(new ConstGoLangApiSignature("crypto/tls", "CurveP256", null, "CurveID"));
		mapType.get("crypto/tls")
				.add(new TypeGoLangApiSignature("crypto/tls", "ConnectionState struct, Version uint16"));
		mapType.get("crypto/tls")
				.add(new TypeGoLangApiSignature("crypto/tls", "ClientSessionCache interface { Get, Put }"));
		mapConst.get("crypto/tls").add(new ConstGoLangApiSignature("crypto/tls", "CurveP256", " 23", null));
		mapType.get("crypto/tls")
				.add(new TypeGoLangApiSignature("crypto/tls", "Config struct, CurvePreferences []CurveID"));
		mapConst.get("crypto/tls").add(new ConstGoLangApiSignature("crypto/tls", "CurveP521", " 25", null));
		mapConst.get("crypto/tls").add(new ConstGoLangApiSignature("crypto/tls", "CurveP384", null, "CurveID"));
		mapType.get("crypto/tls").add(new TypeGoLangApiSignature("crypto/tls",
				"ClientSessionCache interface, Put(string, *ClientSessionState)"));
		mapType.get("crypto/tls").add(new TypeGoLangApiSignature("crypto/tls", "ClientSessionState struct"));
		mapType.get("crypto/tls")
				.add(new TypeGoLangApiSignature("crypto/tls", "Config struct, ClientSessionCache ClientSessionCache"));
		mapType.get("crypto/tls").add(new TypeGoLangApiSignature("crypto/tls", "CurveID uint16"));
		mapFunc.get("crypto/tls").add(new FuncGoLangApiSignature("crypto/tls", "DialWithDialer",
				new String[] { "*net.Dialer", " string", " string", " *Config" }, new String[] { "*Conn", " error" }));
		mapType.get("crypto/tls").add(new TypeGoLangApiSignature("crypto/tls",
				"ClientSessionCache interface, Get(string) (*ClientSessionState, bool)"));

		pkgs.add("syscall (linux-amd64-cgo)");
		mapConst.putIfAbsent("syscall (linux-amd64-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (linux-amd64-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (linux-amd64-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (linux-amd64-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (linux-amd64-cgo)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (linux-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (linux-amd64-cgo)",
				"FcntlFlock", new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (linux-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64-cgo)", "Flock_t struct, Pad_cgo_0 [4]uint8"));
		mapType.get("syscall (linux-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64-cgo)", "Flock_t struct, Whence int16"));
		mapType.get("syscall (linux-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64-cgo)", "Flock_t struct, Pid int32"));
		mapType.get("syscall (linux-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64-cgo)", "Flock_t struct"));
		mapType.get("syscall (linux-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64-cgo)", "Flock_t struct, Len int64"));
		mapType.get("syscall (linux-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64-cgo)", "Flock_t struct, Start int64"));
		mapFunc.get("syscall (linux-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (linux-amd64-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapType.get("syscall (linux-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64-cgo)", "Flock_t struct, Type int16"));
		mapType.get("syscall (linux-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64-cgo)", "Flock_t struct, Pad_cgo_1 [4]uint8"));

		pkgs.add("syscall (netbsd-amd64-cgo)");
		mapConst.putIfAbsent("syscall (netbsd-amd64-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (netbsd-amd64-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (netbsd-amd64-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (netbsd-amd64-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (netbsd-amd64-cgo)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_256TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_PID", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_FS", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "PROT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_FILES", " 1024", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_1TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapType.get("syscall (netbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64-cgo)", "Termios struct"));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)",
				"MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_CSIGNAL", " 255", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "PROT_WRITE", " 2", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MCL_FUTURE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_HASSEMAPHORE", " 512", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MS_SYNC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_64KB", " 268435456", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_STACK", " 8192", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_256TB", " 805306368", null));
		mapFunc.get("syscall (netbsd-amd64-cgo)")
				.add(new FuncGoLangApiSignature("syscall (netbsd-amd64-cgo)", "SendmsgN",
						new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" },
						new String[] { "int", " error" }));
		mapType.get("syscall (netbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64-cgo)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MCL_CURRENT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MS_SYNC", " 4", null));
		mapType.get("syscall (netbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64-cgo)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "PROT_READ", " 1", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_4GB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_VM", " 256", null));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_PTRACE", " 8192", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_VM", null, "ideal-int"));
		mapType.get("syscall (netbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64-cgo)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "PROT_NONE", " 0", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_SIGHAND", " 2048", null));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_64KB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MCL_FUTURE", " 2", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "PROT_EXEC", " 4", null));
		mapType.get("syscall (netbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64-cgo)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "PROT_READ", null, "ideal-int"));
		mapFunc.get("syscall (netbsd-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (netbsd-amd64-cgo)",
				"FcntlFlock", new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_RENAME", " 32", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_SPACEAVAIL", " 5", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_SIGHAND", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_RANDOM", " 1", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_64PB", null, "ideal-int"));
		mapType.get("syscall (netbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64-cgo)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_DEFAULT", " 1", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_16MB", " 402653184", null));
		mapType.get("syscall (netbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64-cgo)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_FS", " 512", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MS_ASYNC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_PRIVATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_CSIGNAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_4GB", " 536870912", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_FREE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MS_ASYNC", " 1", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_VFORK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_STACK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_WIRED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MCL_CURRENT", " 1", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MS_INVALIDATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_1TB", " 671088640", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_WIRED", " 2048", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_FILES", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_64PB", " 939524096", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MS_INVALIDATE", " 2", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_SEQUENTIAL", " 2", null));
		mapType.get("syscall (netbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64-cgo)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_FILE", " 0", null));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_DEFAULT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_VFORK", " 16384", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_PTRACE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "MAP_ALIGNMENT_16MB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64-cgo)", "CLONE_PID", " 4096", null));

		pkgs.add("syscall (linux-386)");
		mapConst.putIfAbsent("syscall (linux-386)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (linux-386)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (linux-386)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (linux-386)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (linux-386)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (linux-386)").add(new FuncGoLangApiSignature("syscall (linux-386)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (linux-386)")
				.add(new TypeGoLangApiSignature("syscall (linux-386)", "Flock_t struct, Whence int16"));
		mapType.get("syscall (linux-386)")
				.add(new TypeGoLangApiSignature("syscall (linux-386)", "Flock_t struct, Pid int32"));
		mapType.get("syscall (linux-386)")
				.add(new TypeGoLangApiSignature("syscall (linux-386)", "Flock_t struct, Type int16"));
		mapType.get("syscall (linux-386)").add(new TypeGoLangApiSignature("syscall (linux-386)", "Flock_t struct"));
		mapType.get("syscall (linux-386)")
				.add(new TypeGoLangApiSignature("syscall (linux-386)", "Flock_t struct, Len int64"));
		mapFunc.get("syscall (linux-386)").add(new FuncGoLangApiSignature("syscall (linux-386)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapType.get("syscall (linux-386)")
				.add(new TypeGoLangApiSignature("syscall (linux-386)", "Flock_t struct, Start int64"));

		pkgs.add("syscall (freebsd-arm-cgo)");
		mapConst.putIfAbsent("syscall (freebsd-arm-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (freebsd-arm-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (freebsd-arm-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (freebsd-arm-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (freebsd-arm-cgo)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (freebsd-arm-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-arm-cgo)", "Accept4",
				new String[] { "int", " int" }, new String[] { "int", " Sockaddr", " error" }));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "EOWNERDEAD", null, "Errno"));
		mapConst.get("syscall (freebsd-arm-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_PIPE2", " 542", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "O_CLOEXEC", " 1048576", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "MAP_ALIGNED_SUPER", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SOCK_CLOEXEC", null, "ideal-int"));
		mapFunc.get("syscall (freebsd-arm-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-arm-cgo)",
				"FcntlFlock", new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Timespec struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SOCK_NONBLOCK", " 536870912", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "IFT_CARP", " 248", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "TCP_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "BIOCGRTIMEOUT", " 1074807406", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_ACCEPT4", " 541", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "AF_INET_SDP", " 40", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SO_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "EOWNERDEAD", " 96", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_CONNECTAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SizeofSockaddrUnix", " 106", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "NAME_MAX", null, "ideal-int"));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SIOCSIFPHYADDR", " 2151704902", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SizeofSockaddrDatalink", " 54", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SOCK_NONBLOCK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SIOCAIFADDR", " 2151704858", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_BINDAT", null, "ideal-int"));
		mapFunc.get("syscall (freebsd-arm-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-arm-cgo)", "Fchflags",
				new String[] { "int", " int" }, new String[] { "error" }));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "EV_DROP", " 4096", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SizeofIfData", " 96", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_ACCEPT4", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "RTF_GWFLAG_COMPAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_CHFLAGSAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "AF_INET6_SDP", " 42", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "ELAST", " 96", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "IFT_CARP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "MSG_CMSG_CLOEXEC", " 262144", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_PROCCTL", " 544", null));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "IfData struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SizeofBpfHdr", " 32", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_CAP_GETRIGHTS", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_BINDAT", " 538", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SizeofIfMsghdr", " 112", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_PROCCTL", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "NAME_MAX", " 255", null));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "AF_MAX", " 42", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "TIOCTIMESTAMP", " 1074820185", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Termios struct, Ispeed uint32"));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Termios struct, Ospeed uint32"));
		mapConst.get("syscall (freebsd-arm-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "RTF_GWFLAG_COMPAT", " 2147483648", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_CHFLAGSAT", " 540", null));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Termios struct, Cflag uint32"));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "EV_DROP", null, "ideal-int"));
		mapFunc.get("syscall (freebsd-arm-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-arm-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "ENOTRECOVERABLE", null, "Errno"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_CAP_GETRIGHTS", " 515", null));
		mapConst.get("syscall (freebsd-arm-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_PIPE2", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SYS_CONNECTAT", " 539", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SIOCGIFSTATUS", " 3274795323", null));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "BpfHdr struct, Pad_cgo_0 [6]uint8"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "ENOTRECOVERABLE", " 95", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "AF_INET6_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SO_VENDOR", " 2147483648", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "BIOCSRTIMEOUT", " 2148549229", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "AF_INET_SDP", null, "ideal-int"));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Timeval struct, Pad_cgo_0 [4]uint8"));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Termios struct"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "TCP_VENDOR", " 2147483648", null));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Flock_t struct, Pad_cgo_0 [4]uint8"));
		mapType.get("syscall (freebsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm-cgo)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "MAP_ALIGNED_SUPER", " 16777216", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "SOCK_CLOEXEC", " 268435456", null));
		mapConst.get("syscall (freebsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm-cgo)", "MSG_CMSG_CLOEXEC", null, "ideal-int"));

		pkgs.add("syscall (freebsd-386-cgo)");
		mapConst.putIfAbsent("syscall (freebsd-386-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (freebsd-386-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (freebsd-386-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (freebsd-386-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (freebsd-386-cgo)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "MAP_ALIGNED_SUPER", " 16777216", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "WEXITED", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_CONNECTAT", null, "ideal-int"));
		mapFunc.get("syscall (freebsd-386-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-386-cgo)", "Accept4",
				new String[] { "int", " int" }, new String[] { "int", " Sockaddr", " error" }));
		mapType.get("syscall (freebsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386-cgo)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SO_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "O_CLOEXEC", " 1048576", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "DLT_MPEG_2_TS", " 243", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "IPPROTO_MPLS", null, "ideal-int"));
		mapFunc.get("syscall (freebsd-386-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-386-cgo)",
				"FcntlFlock", new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "ELAST", " 96", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_PIPE2", " 542", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "MAP_ALIGNED_SUPER", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "MSG_CMSG_CLOEXEC", " 262144", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "DLT_MPEG_2_TS", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_PROCCTL", " 544", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SIGLIBRT", " 33", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_CHFLAGSAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SO_VENDOR", " 2147483648", null));
		mapType.get("syscall (freebsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386-cgo)", "Termios struct, Ispeed uint32"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_BINDAT", null, "ideal-int"));
		mapType.get("syscall (freebsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386-cgo)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "AF_INET_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "DLT_NFC_LLCP", " 245", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "TCP_VENDOR", " 2147483648", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "RT_NORTREF", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "WTRAPPED", " 32", null));
		mapType.get("syscall (freebsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386-cgo)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SIGLIBRT", null, "Signal"));
		mapType.get("syscall (freebsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386-cgo)", "Termios struct, Ospeed uint32"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "EOWNERDEAD", null, "Errno"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_CONNECTAT", " 539", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "EOWNERDEAD", " 96", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SOCK_NONBLOCK", " 536870912", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "AF_MAX", " 42", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "WEXITED", " 16", null));
		mapConst.get("syscall (freebsd-386-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "RTF_GWFLAG_COMPAT", " 2147483648", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_PROCCTL", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "DLT_MATCHING_MAX", " 246", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "AF_INET6_SDP", " 42", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_BINDAT", " 538", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "WTRAPPED", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "MSG_CMSG_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "EV_DROP", " 4096", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "IPPROTO_MPLS", " 137", null));
		mapType.get("syscall (freebsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386-cgo)", "Termios struct"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SOCK_CLOEXEC", " 268435456", null));
		mapFunc.get("syscall (freebsd-386-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-386-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "DLT_NG40", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "NAME_MAX", " 255", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "AF_INET6_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "NAME_MAX", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "DLT_NFC_LLCP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "DLT_NG40", " 244", null));
		mapType.get("syscall (freebsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386-cgo)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "ENOTRECOVERABLE", " 95", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "RTF_GWFLAG_COMPAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SOCK_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "TCP_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "EV_DROP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_CHFLAGSAT", " 540", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "AF_INET_SDP", " 40", null));
		mapConst.get("syscall (freebsd-386-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "ENOTRECOVERABLE", null, "Errno"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_ACCEPT4", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_PIPE2", null, "ideal-int"));
		mapType.get("syscall (freebsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386-cgo)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "RT_NORTREF", " 2", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SYS_ACCEPT4", " 541", null));
		mapConst.get("syscall (freebsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386-cgo)", "SOCK_NONBLOCK", null, "ideal-int"));

		pkgs.add("syscall (freebsd-amd64-cgo)");
		mapConst.putIfAbsent("syscall (freebsd-amd64-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (freebsd-amd64-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (freebsd-amd64-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (freebsd-amd64-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (freebsd-amd64-cgo)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "DLT_MPEG_2_TS", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SIGLIBRT", null, "Signal"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "EOWNERDEAD", " 96", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "O_CLOEXEC", " 1048576", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "RT_NORTREF", " 2", null));
		mapFunc.get("syscall (freebsd-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-amd64-cgo)",
				"Accept4", new String[] { "int", " int" }, new String[] { "int", " Sockaddr", " error" }));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "EOWNERDEAD", null, "Errno"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SO_VENDOR", null, "ideal-int"));
		mapType.get("syscall (freebsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64-cgo)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "TCP_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "DLT_MPEG_2_TS", " 243", null));
		mapFunc.get("syscall (freebsd-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (freebsd-amd64-cgo)",
				"FcntlFlock", new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (freebsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64-cgo)", "Termios struct, Ispeed uint32"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MSG_CMSG_CLOEXEC", " 262144", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MAP_32BIT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "WEXITED", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "DLT_NG40", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_PIPE2", " 542", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "ELAST", " 96", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SIGLIBRT", " 33", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_PROCCTL", " 544", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_CHFLAGSAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MAP_ALIGNED_SUPER", " 16777216", null));
		mapType.get("syscall (freebsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64-cgo)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "AF_INET_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SOCK_CLOEXEC", " 268435456", null));
		mapType.get("syscall (freebsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64-cgo)", "Termios struct, Ospeed uint32"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MAP_32BIT", " 524288", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_BINDAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "DLT_NFC_LLCP", " 245", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "IPPROTO_MPLS", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SO_VENDOR", " 2147483648", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "TCP_VENDOR", " 2147483648", null));
		mapType.get("syscall (freebsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64-cgo)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "RT_NORTREF", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_CONNECTAT", " 539", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_PROCCTL", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_CONNECTAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SOCK_NONBLOCK", " 536870912", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "WTRAPPED", " 32", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "WTRAPPED", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "RTF_GWFLAG_COMPAT", " 2147483648", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MSG_CMSG_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "EV_DROP", " 4096", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "IPPROTO_MPLS", " 137", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_ACCEPT4", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "AF_INET6_SDP", " 42", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "AF_MAX", " 42", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "DLT_MATCHING_MAX", " 246", null));
		mapType.get("syscall (freebsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64-cgo)", "Termios struct"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_BINDAT", " 538", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "WEXITED", " 16", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "NAME_MAX", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "AF_INET6_SDP", null, "ideal-int"));
		mapFunc.get("syscall (freebsd-amd64-cgo)")
				.add(new FuncGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SendmsgN",
						new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" },
						new String[] { "int", " error" }));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "NAME_MAX", " 255", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SOCK_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MAP_ALIGNED_SUPER", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "DLT_NG40", " 244", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_CHFLAGSAT", " 540", null));
		mapType.get("syscall (freebsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64-cgo)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (freebsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "RTF_GWFLAG_COMPAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "EV_DROP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SOCK_NONBLOCK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "ENOTRECOVERABLE", " 95", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_ACCEPT4", " 541", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "ENOTRECOVERABLE", null, "Errno"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "SYS_PIPE2", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "AF_INET_SDP", " 40", null));
		mapConst.get("syscall (freebsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "DLT_NFC_LLCP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (freebsd-amd64-cgo)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapType.get("syscall (freebsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64-cgo)", "Termios struct, Lflag uint32"));

		pkgs.add("regexp/syntax");
		mapConst.putIfAbsent("regexp/syntax", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("regexp/syntax", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("regexp/syntax", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("regexp/syntax", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("regexp/syntax", new HashSet<VarGoLangApiSignature>());

		mapMethod.get("regexp/syntax").add(new MethodGoLangApiSignature("regexp/syntax", "InstOp", "String",
				new String[] { "" }, new String[] { "string" }));
		mapMethod.get("regexp/syntax").add(new MethodGoLangApiSignature("regexp/syntax", "*Inst", "MatchRunePos",
				new String[] { "int32" }, new String[] { "int" }));

		pkgs.add("syscall (linux-arm-cgo)");
		mapConst.putIfAbsent("syscall (linux-arm-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (linux-arm-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (linux-arm-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (linux-arm-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (linux-arm-cgo)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (linux-arm-cgo)").add(new FuncGoLangApiSignature("syscall (linux-arm-cgo)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (linux-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm-cgo)", "Flock_t struct, Type int16"));
		mapType.get("syscall (linux-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm-cgo)", "Flock_t struct, Pad_cgo_0 [4]uint8"));
		mapFunc.get("syscall (linux-arm-cgo)").add(new FuncGoLangApiSignature("syscall (linux-arm-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapType.get("syscall (linux-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm-cgo)", "Flock_t struct, Start int64"));
		mapType.get("syscall (linux-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm-cgo)", "Flock_t struct"));
		mapType.get("syscall (linux-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm-cgo)", "Flock_t struct, Len int64"));
		mapType.get("syscall (linux-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm-cgo)", "Flock_t struct, Pid int32"));
		mapType.get("syscall (linux-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm-cgo)", "Flock_t struct, Pad_cgo_1 [4]uint8"));
		mapType.get("syscall (linux-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm-cgo)", "Flock_t struct, Whence int16"));

		pkgs.add("debug/plan9obj");
		mapConst.putIfAbsent("debug/plan9obj", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("debug/plan9obj", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("debug/plan9obj", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("debug/plan9obj", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("debug/plan9obj", new HashSet<VarGoLangApiSignature>());

		mapConst.get("debug/plan9obj").add(new ConstGoLangApiSignature("debug/plan9obj", "MagicAMD64", " 35479", null));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "SectionHeader struct, Offset uint32"));
		mapMethod.get("debug/plan9obj").add(new MethodGoLangApiSignature("debug/plan9obj", "*Section", "Open",
				new String[] { "" }, new String[] { "io.ReadSeeker" }));
		mapConst.get("debug/plan9obj").add(new ConstGoLangApiSignature("debug/plan9obj", "MagicARM", " 1607", null));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "File struct, embedded FileHeader"));
		mapType.get("debug/plan9obj").add(new TypeGoLangApiSignature("debug/plan9obj", "Sym struct, Type int32"));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "SectionHeader struct, Name string"));
		mapMethod.get("debug/plan9obj").add(new MethodGoLangApiSignature("debug/plan9obj", "*File", "Section",
				new String[] { "string" }, new String[] { "*Section" }));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "Section struct, embedded io.ReaderAt"));
		mapConst.get("debug/plan9obj").add(new ConstGoLangApiSignature("debug/plan9obj", "Magic386", " 491", null));
		mapMethod.get("debug/plan9obj").add(new MethodGoLangApiSignature("debug/plan9obj", "*Section", "Data",
				new String[] { "" }, new String[] { "[]uint8", " error" }));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "File struct, Sections []*Section"));
		mapConst.get("debug/plan9obj").add(new ConstGoLangApiSignature("debug/plan9obj", "Magic64", null, "ideal-int"));
		mapConst.get("debug/plan9obj")
				.add(new ConstGoLangApiSignature("debug/plan9obj", "Magic386", null, "ideal-int"));
		mapType.get("debug/plan9obj").add(new TypeGoLangApiSignature("debug/plan9obj", "Sym struct"));
		mapType.get("debug/plan9obj").add(new TypeGoLangApiSignature("debug/plan9obj", "FileHeader struct"));
		mapConst.get("debug/plan9obj").add(new ConstGoLangApiSignature("debug/plan9obj", "Magic64", " 32768", null));
		mapMethod.get("debug/plan9obj").add(new MethodGoLangApiSignature("debug/plan9obj", "Section", "ReadAt",
				new String[] { "[]uint8", " int64" }, new String[] { "int", " error" }));
		mapType.get("debug/plan9obj").add(new TypeGoLangApiSignature("debug/plan9obj", "SectionHeader struct"));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "FileHeader struct, Bss uint32"));
		mapFunc.get("debug/plan9obj").add(new FuncGoLangApiSignature("debug/plan9obj", "Open",
				new String[] { "string" }, new String[] { "*File", " error" }));
		mapConst.get("debug/plan9obj")
				.add(new ConstGoLangApiSignature("debug/plan9obj", "MagicARM", null, "ideal-int"));
		mapMethod.get("debug/plan9obj").add(new MethodGoLangApiSignature("debug/plan9obj", "*File", "Symbols",
				new String[] { "" }, new String[] { "[]Sym", " error" }));
		mapType.get("debug/plan9obj").add(new TypeGoLangApiSignature("debug/plan9obj", "Sym struct, Name string"));
		mapMethod.get("debug/plan9obj").add(new MethodGoLangApiSignature("debug/plan9obj", "*File", "Close",
				new String[] { "" }, new String[] { "error" }));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "FileHeader struct, Magic uint32"));
		mapType.get("debug/plan9obj").add(new TypeGoLangApiSignature("debug/plan9obj", "Section struct"));
		mapConst.get("debug/plan9obj")
				.add(new ConstGoLangApiSignature("debug/plan9obj", "MagicAMD64", null, "ideal-int"));
		mapType.get("debug/plan9obj").add(new TypeGoLangApiSignature("debug/plan9obj", "Sym struct, Value uint64"));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "FileHeader struct, Entry uint64"));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "SectionHeader struct, Size uint32"));
		mapType.get("debug/plan9obj").add(new TypeGoLangApiSignature("debug/plan9obj", "File struct"));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "FileHeader struct, PtrSize int"));
		mapType.get("debug/plan9obj")
				.add(new TypeGoLangApiSignature("debug/plan9obj", "Section struct, embedded SectionHeader"));
		mapFunc.get("debug/plan9obj").add(new FuncGoLangApiSignature("debug/plan9obj", "NewFile",
				new String[] { "io.ReaderAt" }, new String[] { "*File", " error" }));

		pkgs.add("crypto/x509/pkix");
		mapConst.putIfAbsent("crypto/x509/pkix", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("crypto/x509/pkix", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("crypto/x509/pkix", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("crypto/x509/pkix", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("crypto/x509/pkix", new HashSet<VarGoLangApiSignature>());

		mapType.get("crypto/x509/pkix")
				.add(new TypeGoLangApiSignature("crypto/x509/pkix", "AttributeTypeAndValueSET struct"));
		mapType.get("crypto/x509/pkix").add(new TypeGoLangApiSignature("crypto/x509/pkix",
				"AttributeTypeAndValueSET struct, Value [][]AttributeTypeAndValue"));
		mapType.get("crypto/x509/pkix").add(new TypeGoLangApiSignature("crypto/x509/pkix",
				"AttributeTypeAndValueSET struct, Type asn1.ObjectIdentifier"));

		pkgs.add("syscall (netbsd-amd64)");
		mapConst.putIfAbsent("syscall (netbsd-amd64)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (netbsd-amd64)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (netbsd-amd64)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (netbsd-amd64)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (netbsd-amd64)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_PID", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_256TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_FS", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "PROT_NONE", null, "ideal-int"));
		mapType.get("syscall (netbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64)", "Termios struct"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_1TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapType.get("syscall (netbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MCL_FUTURE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "PROT_WRITE", " 2", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_FILES", " 1024", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_CSIGNAL", " 255", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_HASSEMAPHORE", " 512", null));
		mapConst.get("syscall (netbsd-amd64)").add(
				new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_4GB", " 536870912", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MS_SYNC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_STACK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MS_ASYNC", " 1", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MS_INVALIDATE", " 2", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_FREE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_1TB", " 671088640", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MS_INVALIDATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_WIRED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_16MB", " 402653184", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_FILES", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MCL_CURRENT", " 1", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_VFORK", null, "ideal-int"));
		mapFunc.get("syscall (netbsd-amd64)").add(new FuncGoLangApiSignature("syscall (netbsd-amd64)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_64PB", " 939524096", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_WIRED", " 2048", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_SEQUENTIAL", " 2", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_SPACEAVAIL", " 5", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_DEFAULT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_16MB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_PID", " 4096", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_VFORK", " 16384", null));
		mapType.get("syscall (netbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_PTRACE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_FILE", " 0", null));
		mapType.get("syscall (netbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "PROT_NONE", " 0", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_64KB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_SIGHAND", " 2048", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MCL_FUTURE", " 2", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_SIGHAND", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "PROT_EXEC", " 4", null));
		mapFunc.get("syscall (netbsd-amd64)").add(new FuncGoLangApiSignature("syscall (netbsd-amd64)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_RENAME", " 32", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_RANDOM", " 1", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_64PB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_DEFAULT", " 1", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "PROT_READ", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_FS", " 512", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MS_ASYNC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_PRIVATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_CSIGNAL", null, "ideal-int"));
	}

	private void build1() {
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_256TB", " 805306368", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_64KB", " 268435456", null));
		mapType.get("syscall (netbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "PROT_READ", " 1", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MCL_CURRENT", null, "ideal-int"));
		mapType.get("syscall (netbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MS_SYNC", " 4", null));
		mapType.get("syscall (netbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64)", "Termios struct, Lflag uint32"));
		mapType.get("syscall (netbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-amd64)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_4GB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_STACK", " 8192", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_VM", " 256", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_VM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (netbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-amd64)", "CLONE_PTRACE", " 8192", null));

		pkgs.add("compress/gzip");
		mapConst.putIfAbsent("compress/gzip", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("compress/gzip", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("compress/gzip", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("compress/gzip", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("compress/gzip", new HashSet<VarGoLangApiSignature>());

		mapMethod.get("compress/gzip").add(new MethodGoLangApiSignature("compress/gzip", "*Reader", "Reset",
				new String[] { "io.Reader" }, new String[] { "error" }));

		pkgs.add("syscall (freebsd-386)");
		mapConst.putIfAbsent("syscall (freebsd-386)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (freebsd-386)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (freebsd-386)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (freebsd-386)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (freebsd-386)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (freebsd-386)").add(new FuncGoLangApiSignature("syscall (freebsd-386)", "Accept4",
				new String[] { "int", " int" }, new String[] { "int", " Sockaddr", " error" }));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "DLT_MATCHING_MAX", " 246", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "WTRAPPED", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "RTF_GWFLAG_COMPAT", " 2147483648", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_BINDAT", " 538", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_PROCCTL", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "AF_INET6_SDP", " 42", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "AF_MAX", " 42", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "WEXITED", " 16", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "IPPROTO_MPLS", " 137", null));
		mapFunc.get("syscall (freebsd-386)").add(new FuncGoLangApiSignature("syscall (freebsd-386)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "MSG_CMSG_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "EV_DROP", " 4096", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SOCK_CLOEXEC", " 268435456", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "AF_INET6_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "NAME_MAX", " 255", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "DLT_NFC_LLCP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "DLT_NG40", " 244", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "NAME_MAX", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SOCK_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "ENOTRECOVERABLE", " 95", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "EV_DROP", null, "ideal-int"));
		mapType.get("syscall (freebsd-386)").add(new TypeGoLangApiSignature("syscall (freebsd-386)", "Termios struct"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "RTF_GWFLAG_COMPAT", null, "ideal-int"));
		mapType.get("syscall (freebsd-386)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "ENOTRECOVERABLE", null, "Errno"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_ACCEPT4", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_PIPE2", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "TCP_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_ACCEPT4", " 541", null));
		mapType.get("syscall (freebsd-386)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386)", "Termios struct, Ispeed uint32"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "AF_INET_SDP", " 40", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "RT_NORTREF", " 2", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_CHFLAGSAT", " 540", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SOCK_NONBLOCK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "MAP_ALIGNED_SUPER", " 16777216", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "EOWNERDEAD", null, "Errno"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SO_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "O_CLOEXEC", " 1048576", null));
		mapType.get("syscall (freebsd-386)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_CONNECTAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "WEXITED", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "DLT_MPEG_2_TS", " 243", null));
		mapType.get("syscall (freebsd-386)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386)", "Termios struct, Ospeed uint32"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_PIPE2", " 542", null));
		mapType.get("syscall (freebsd-386)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "MAP_ALIGNED_SUPER", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_PROCCTL", " 544", null));
		mapFunc.get("syscall (freebsd-386)").add(new FuncGoLangApiSignature("syscall (freebsd-386)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "MSG_CMSG_CLOEXEC", " 262144", null));
		mapType.get("syscall (freebsd-386)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_CHFLAGSAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "ELAST", " 96", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SIGLIBRT", " 33", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "DLT_MPEG_2_TS", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "DLT_NG40", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_BINDAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "RT_NORTREF", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "AF_INET_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "TCP_VENDOR", " 2147483648", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "DLT_NFC_LLCP", " 245", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SO_VENDOR", " 2147483648", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "WTRAPPED", " 32", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "IPPROTO_MPLS", null, "ideal-int"));
		mapType.get("syscall (freebsd-386)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-386)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SIGLIBRT", null, "Signal"));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "EOWNERDEAD", " 96", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SOCK_NONBLOCK", " 536870912", null));
		mapConst.get("syscall (freebsd-386)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-386)", "SYS_CONNECTAT", " 539", null));

		pkgs.add("debug/pe");
		mapConst.putIfAbsent("debug/pe", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("debug/pe", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("debug/pe", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("debug/pe", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("debug/pe", new HashSet<VarGoLangApiSignature>());

		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, BaseOfCode uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, BaseOfData uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfHeapCommit uint32"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "DataDirectory struct"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfInitializedData uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfCode uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, LoaderFlags uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "DataDirectory struct, VirtualAddress uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, MajorLinkerVersion uint8"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfCode uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, ImageBase uint64"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfStackReserve uint32"));
		mapType.get("debug/pe").add(
				new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, DataDirectory [16]DataDirectory"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, CheckSum uint32"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, CheckSum uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, NumberOfRvaAndSizes uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, FileAlignment uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfImage uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, BaseOfCode uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfHeaders uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, DllCharacteristics uint16"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, Subsystem uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, MinorImageVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, Win32VersionValue uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfHeapCommit uint64"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfInitializedData uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, NumberOfRvaAndSizes uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfHeapReserve uint64"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, MinorSubsystemVersion uint16"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, Magic uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, FileAlignment uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfUninitializedData uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, MinorLinkerVersion uint8"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfStackCommit uint64"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, MajorSubsystemVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfImage uint32"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "DataDirectory struct, Size uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SectionAlignment uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, MajorImageVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, MajorLinkerVersion uint8"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfHeapReserve uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfUninitializedData uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, MinorImageVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, AddressOfEntryPoint uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, ImageBase uint32"));
		mapType.get("debug/pe").add(
				new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, MajorOperatingSystemVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SectionAlignment uint32"));
		mapType.get("debug/pe").add(
				new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, DataDirectory [16]DataDirectory"));
		mapType.get("debug/pe").add(
				new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, MinorOperatingSystemVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, AddressOfEntryPoint uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfHeaders uint32"));
		mapType.get("debug/pe").add(
				new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, MajorOperatingSystemVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, MinorLinkerVersion uint8"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, Magic uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, SizeOfStackCommit uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, MinorSubsystemVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, DllCharacteristics uint16"));
		mapType.get("debug/pe").add(new TypeGoLangApiSignature("debug/pe", "File struct, OptionalHeader interface{}"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, MajorImageVersion uint16"));
		mapType.get("debug/pe").add(
				new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, MinorOperatingSystemVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, LoaderFlags uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, SizeOfStackReserve uint64"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader32 struct, Win32VersionValue uint32"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, MajorSubsystemVersion uint16"));
		mapType.get("debug/pe")
				.add(new TypeGoLangApiSignature("debug/pe", "OptionalHeader64 struct, Subsystem uint16"));

		pkgs.add("syscall (darwin-386-cgo)");
		mapConst.putIfAbsent("syscall (darwin-386-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (darwin-386-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (darwin-386-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (darwin-386-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (darwin-386-cgo)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (darwin-386-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-386-cgo)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-386-cgo)", "Mprotect",
				new String[] { "[]uint8", " int" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-386-cgo)", "Munlock",
				new String[] { "[]uint8" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-386-cgo)", "Munlockall",
				new String[] { "" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-386-cgo)", "Mlockall",
				new String[] { "int" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-386-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapFunc.get("syscall (darwin-386-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-386-cgo)", "Mlock",
				new String[] { "[]uint8" }, new String[] { "error" }));

		pkgs.add("crypto/x509");
		mapConst.putIfAbsent("crypto/x509", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("crypto/x509", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("crypto/x509", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("crypto/x509", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("crypto/x509", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("crypto/x509")
				.add(new FuncGoLangApiSignature("crypto/x509", "CreateCertificateRequest",
						new String[] { "io.Reader", " *CertificateRequest", " interface{}" },
						new String[] { "[]uint8", " error" }));
		mapType.get("crypto/x509").add(new TypeGoLangApiSignature("crypto/x509",
				"CertificateRequest struct, SignatureAlgorithm SignatureAlgorithm"));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, Version int"));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, IPAddresses []net.IP"));
		mapType.get("crypto/x509").add(new TypeGoLangApiSignature("crypto/x509",
				"CertificateRequest struct, PublicKeyAlgorithm PublicKeyAlgorithm"));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, Signature []uint8"));
		mapType.get("crypto/x509").add(new TypeGoLangApiSignature("crypto/x509",
				"CertificateRequest struct, RawSubjectPublicKeyInfo []uint8"));
		mapFunc.get("crypto/x509").add(new FuncGoLangApiSignature("crypto/x509", "ParseCertificateRequest",
				new String[] { "[]uint8" }, new String[] { "*CertificateRequest", " error" }));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, RawSubject []uint8"));
		mapType.get("crypto/x509").add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct"));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, PublicKey interface{}"));
		mapType.get("crypto/x509").add(new TypeGoLangApiSignature("crypto/x509",
				"CertificateRequest struct, RawTBSCertificateRequest []uint8"));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, Subject pkix.Name"));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, Raw []uint8"));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, DNSNames []string"));
		mapType.get("crypto/x509").add(
				new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, Extensions []pkix.Extension"));
		mapType.get("crypto/x509")
				.add(new TypeGoLangApiSignature("crypto/x509", "CertificateRequest struct, EmailAddresses []string"));
		mapType.get("crypto/x509").add(new TypeGoLangApiSignature("crypto/x509",
				"CertificateRequest struct, Attributes []pkix.AttributeTypeAndValueSET"));
		mapType.get("crypto/x509").add(new TypeGoLangApiSignature("crypto/x509",
				"CertificateRequest struct, ExtraExtensions []pkix.Extension"));

		pkgs.add("syscall (netbsd-arm)");
		mapConst.putIfAbsent("syscall (netbsd-arm)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (netbsd-arm)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (netbsd-arm)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (netbsd-arm)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (netbsd-arm)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_FREE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_64KB", " 268435456", null));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Stat_t struct, Pad_cgo_2 [4]uint8"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_4GB", " 536870912", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_64PB", " 939524096", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_WILLNEED", " 3", null));
		mapType.get("syscall (netbsd-arm)").add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Termios struct"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_WIRED", " 2048", null));
		mapFunc.get("syscall (netbsd-arm)").add(new FuncGoLangApiSignature("syscall (netbsd-arm)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_HASSEMAPHORE", " 512", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_16MB", " 402653184", null));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_DEFAULT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_DEFAULT", " 1", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Stat_t struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "SizeofIfData", " 136", null));
		mapFunc.get("syscall (netbsd-arm)").add(new FuncGoLangApiSignature("syscall (netbsd-arm)", "Fchflags",
				new String[] { "int", " int" }, new String[] { "error" }));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_PRIVATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "PROT_WRITE", " 2", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_SHARED", " 1", null));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Stat_t struct, Pad_cgo_1 [4]uint8"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_64PB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "PROT_READ", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_1TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_64KB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "PROT_NONE", " 0", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_256TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_NORESERVE", " 64", null));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_RANDOM", " 1", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_16MB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "PROT_NONE", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "PROT_EXEC", " 4", null));
		mapFunc.get("syscall (netbsd-arm)").add(new FuncGoLangApiSignature("syscall (netbsd-arm)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Timespec struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_SEQUENTIAL", " 2", null));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_256TB", " 805306368", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_FILE", " 0", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_SPACEAVAIL", " 5", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_4GB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Timeval struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_RENAME", " 32", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_ALIGNMENT_1TB", " 671088640", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "PROT_READ", " 1", null));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_STACK", " 8192", null));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Kevent_t struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_STACK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "MAP_WIRED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm)", "PROT_WRITE", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm)", "Termios struct, Lflag uint32"));

		pkgs.add("net");
		mapConst.putIfAbsent("net", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("net", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("net", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("net", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("net", new HashSet<VarGoLangApiSignature>());

		mapType.get("net").add(new TypeGoLangApiSignature("net", "Dialer struct, KeepAlive time.Duration"));

		pkgs.add("runtime/debug");
		mapConst.putIfAbsent("runtime/debug", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("runtime/debug", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("runtime/debug", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("runtime/debug", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("runtime/debug", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("runtime/debug").add(new FuncGoLangApiSignature("runtime/debug", "SetPanicOnFault",
				new String[] { "bool" }, new String[] { "bool" }));
		mapFunc.get("runtime/debug").add(new FuncGoLangApiSignature("runtime/debug", "WriteHeapDump",
				new String[] { "uintptr" }, new String[] { "" }));

		pkgs.add("syscall (freebsd-arm)");
		mapConst.putIfAbsent("syscall (freebsd-arm)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (freebsd-arm)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (freebsd-arm)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (freebsd-arm)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (freebsd-arm)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "EV_DROP", " 4096", null));
		mapFunc.get("syscall (freebsd-arm)").add(new FuncGoLangApiSignature("syscall (freebsd-arm)", "Accept4",
				new String[] { "int", " int" }, new String[] { "int", " Sockaddr", " error" }));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Timespec struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_CAP_GETRIGHTS", " 515", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "ENOTRECOVERABLE", " 95", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "ENOTRECOVERABLE", null, "Errno"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_CONNECTAT", " 539", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "MSG_CMSG_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SIOCSIFPHYADDR", " 2151704902", null));
		mapFunc.get("syscall (freebsd-arm)").add(new FuncGoLangApiSignature("syscall (freebsd-arm)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "NAME_MAX", " 255", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_BINDAT", " 538", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SizeofIfMsghdr", " 112", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_CAP_GETRIGHTS", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SIOCGIFSTATUS", " 3274795323", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "AF_INET6_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_PROCCTL", null, "ideal-int"));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SOCK_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_BINDAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "RTF_GWFLAG_COMPAT", " 2147483648", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "TIOCTIMESTAMP", " 1074820185", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "TCP_VENDOR", " 2147483648", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "IFT_CARP", " 248", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "MAP_ALIGNED_SUPER", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SOCK_NONBLOCK", " 536870912", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_PIPE2", " 542", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapFunc.get("syscall (freebsd-arm)").add(new FuncGoLangApiSignature("syscall (freebsd-arm)", "Fchflags",
				new String[] { "int", " int" }, new String[] { "error" }));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SOCK_CLOEXEC", " 268435456", null));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "IfData struct, Pad_cgo_0 [4]uint8"));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SO_VENDOR", " 2147483648", null));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "EOWNERDEAD", null, "Errno"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "AF_INET_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "TCP_VENDOR", null, "ideal-int"));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "ELAST", " 96", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SO_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_ACCEPT4", " 541", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "AF_INET_SDP", " 40", null));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Timeval struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "EOWNERDEAD", " 96", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "MSG_CMSG_CLOEXEC", " 262144", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_CONNECTAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "BIOCGRTIMEOUT", " 1074807406", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "MAP_ALIGNED_SUPER", " 16777216", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SizeofSockaddrDatalink", " 54", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SizeofSockaddrUnix", " 106", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "EV_DROP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "O_CLOEXEC", " 1048576", null));
		mapFunc.get("syscall (freebsd-arm)").add(new FuncGoLangApiSignature("syscall (freebsd-arm)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "BIOCSRTIMEOUT", " 2148549229", null));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Termios struct, Ospeed uint32"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_CHFLAGSAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "IFT_CARP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "RTF_GWFLAG_COMPAT", null, "ideal-int"));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Termios struct, Lflag uint32"));
		mapType.get("syscall (freebsd-arm)").add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Termios struct"));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Flock_t struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_PROCCTL", " 544", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_PIPE2", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SizeofBpfHdr", " 32", null));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "BpfHdr struct, Pad_cgo_0 [6]uint8"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "NAME_MAX", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "AF_INET6_SDP", " 42", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "AF_MAX", " 42", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SIOCAIFADDR", " 2151704858", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SOCK_NONBLOCK", null, "ideal-int"));
		mapType.get("syscall (freebsd-arm)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-arm)", "Termios struct, Ispeed uint32"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_ACCEPT4", null, "ideal-int"));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SizeofIfData", " 96", null));
		mapConst.get("syscall (freebsd-arm)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-arm)", "SYS_CHFLAGSAT", " 540", null));

		pkgs.add("debug/dwarf");
		mapConst.putIfAbsent("debug/dwarf", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("debug/dwarf", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("debug/dwarf", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("debug/dwarf", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("debug/dwarf", new HashSet<VarGoLangApiSignature>());

		mapConst.get("debug/dwarf").add(new ConstGoLangApiSignature("debug/dwarf", "TagTemplateAlias", " 67", null));
		mapConst.get("debug/dwarf").add(new ConstGoLangApiSignature("debug/dwarf", "TagTemplateAlias", null, "Tag"));
		mapConst.get("debug/dwarf").add(new ConstGoLangApiSignature("debug/dwarf", "TagTypeUnit", null, "Tag"));
		mapConst.get("debug/dwarf")
				.add(new ConstGoLangApiSignature("debug/dwarf", "TagRvalueReferenceType", " 66", null));
		mapMethod.get("debug/dwarf").add(new MethodGoLangApiSignature("debug/dwarf", "*Data", "AddTypes",
				new String[] { "string", " []uint8" }, new String[] { "error" }));
		mapConst.get("debug/dwarf")
				.add(new ConstGoLangApiSignature("debug/dwarf", "TagRvalueReferenceType", null, "Tag"));
		mapConst.get("debug/dwarf").add(new ConstGoLangApiSignature("debug/dwarf", "TagSharedType", null, "Tag"));
		mapConst.get("debug/dwarf").add(new ConstGoLangApiSignature("debug/dwarf", "TagTypeUnit", " 65", null));
		mapConst.get("debug/dwarf").add(new ConstGoLangApiSignature("debug/dwarf", "TagCondition", " 63", null));
		mapConst.get("debug/dwarf").add(new ConstGoLangApiSignature("debug/dwarf", "TagCondition", null, "Tag"));
		mapConst.get("debug/dwarf").add(new ConstGoLangApiSignature("debug/dwarf", "TagSharedType", " 64", null));

		pkgs.add("syscall (windows-386)");
		mapConst.putIfAbsent("syscall (windows-386)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (windows-386)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (windows-386)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (windows-386)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (windows-386)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "WSAECONNRESET", " 10054", null));
		mapType.get("syscall (windows-386)")
				.add(new TypeGoLangApiSignature("syscall (windows-386)", "TCPKeepalive struct, Time uint32"));
		mapType.get("syscall (windows-386)")
				.add(new TypeGoLangApiSignature("syscall (windows-386)", "TCPKeepalive struct, Interval uint32"));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "ERROR_NETNAME_DELETED", null, "Errno"));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "IOC_VENDOR", " 402653184", null));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "SIO_KEEPALIVE_VALS", null, "ideal-int"));
		mapFunc.get("syscall (windows-386)").add(new FuncGoLangApiSignature("syscall (windows-386)", "NewCallbackCDecl",
				new String[] { "interface{}" }, new String[] { "uintptr" }));
		mapType.get("syscall (windows-386)")
				.add(new TypeGoLangApiSignature("syscall (windows-386)", "TCPKeepalive struct"));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "ERROR_MORE_DATA", null, "Errno"));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "ERROR_NETNAME_DELETED", " 64", null));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "SIO_KEEPALIVE_VALS", " 2550136836", null));
		mapType.get("syscall (windows-386)")
				.add(new TypeGoLangApiSignature("syscall (windows-386)", "TCPKeepalive struct, OnOff uint32"));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "ERROR_MORE_DATA", " 234", null));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "WSAECONNRESET", null, "Errno"));
		mapConst.get("syscall (windows-386)")
				.add(new ConstGoLangApiSignature("syscall (windows-386)", "IOC_VENDOR", null, "ideal-int"));

		pkgs.add("archive/tar");
		mapConst.putIfAbsent("archive/tar", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("archive/tar", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("archive/tar", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("archive/tar", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("archive/tar", new HashSet<VarGoLangApiSignature>());

		mapConst.get("archive/tar")
				.add(new ConstGoLangApiSignature("archive/tar", "TypeGNUSparse", null, "ideal-char"));
		mapConst.get("archive/tar").add(new ConstGoLangApiSignature("archive/tar", "TypeGNUSparse", " 83", null));
		mapType.get("archive/tar")
				.add(new TypeGoLangApiSignature("archive/tar", "Header struct, Xattrs map[string]string"));

		pkgs.add("math/big");
		mapConst.putIfAbsent("math/big", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("math/big", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("math/big", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("math/big", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("math/big", new HashSet<VarGoLangApiSignature>());

		mapMethod.get("math/big").add(new MethodGoLangApiSignature("math/big", "*Int", "MarshalText",
				new String[] { "" }, new String[] { "[]uint8", " error" }));
		mapMethod.get("math/big").add(new MethodGoLangApiSignature("math/big", "*Int", "UnmarshalText",
				new String[] { "[]uint8" }, new String[] { "error" }));
		mapMethod.get("math/big").add(new MethodGoLangApiSignature("math/big", "*Rat", "MarshalText",
				new String[] { "" }, new String[] { "[]uint8", " error" }));
		mapMethod.get("math/big").add(new MethodGoLangApiSignature("math/big", "*Rat", "UnmarshalText",
				new String[] { "[]uint8" }, new String[] { "error" }));

		pkgs.add("syscall (openbsd-amd64-cgo)");
		mapConst.putIfAbsent("syscall (openbsd-amd64-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (openbsd-amd64-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (openbsd-amd64-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (openbsd-amd64-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (openbsd-amd64-cgo)", new HashSet<VarGoLangApiSignature>());

		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Dirent struct, Fileno uint64"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "PROT_READ", " 1", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Kevent_t struct, Data int64"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_NOEXTEND", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (openbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGSPPPPARAMS", " 3223349652", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Dirent struct, X__d_padding [4]uint8"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_NANOSLEEP", " 91", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_FLAGMASK", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MS_INVALIDATE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGIFHARDMTU", " 3223349669", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MCL_CURRENT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGLIFPHYTTL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "IPPROTO_DIVERT_RESP", " 1", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCBRDGSADDR", " 3240651076", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_UTIMENSAT", " 84", null));
		mapConst.get("syscall (openbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCSSPPPPARAMS", " 2149607827", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCSVNETID", " 2149607846", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Stat_t struct, Ino uint64"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_KEVENT", " 72", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "IP_DIVERTFL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_STATFS", " 63", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_WAIT4", " 11", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "TIOCGSID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_PRIVATE", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64-cgo)").add(
				new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Statfs_t struct, F_mntfromspec [90]int8"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Termios struct, Cflag uint32"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "RtMetrics struct, Expire int64"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCSLIFPHYTTL", " 2149607848", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_FSTATAT", " 42", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_RENAME", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "FdSet struct, Bits [32]uint32"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "PROT_NONE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_GETTIMEOFDAY", " 67", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MCL_FUTURE", " 2", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCBRDGDADDR", " 2166909255", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_FUTIMENS", " 85", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_PSELECT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_UTRACE", " 209", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "IPV6_RECVDSTPORT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_RANDOM", null, "ideal-int"));
		mapFunc.get("syscall (openbsd-amd64-cgo)")
				.add(new FuncGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SendmsgN",
						new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" },
						new String[] { "int", " error" }));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_NOEXTEND", " 256", null));
		mapConst.get("syscall (openbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "IPPROTO_DIVERT_RESP", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "TIOCGSID", " 1074033763", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_PPOLL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_SHARED", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Statfs_t struct, Pad_cgo_1 [2]uint8"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGSPPPPARAMS", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Mclpool struct, Grown int32"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SizeofRtMsghdr", " 96", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "PROT_EXEC", " 4", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_ANON", " 4096", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Timespec struct, Sec int64"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_CLOCK_GETRES", " 89", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Termios struct"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MS_SYNC", " 2", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "RTM_VERSION", " 5", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGVNETID", " 3223349671", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "IP_DIVERTFL", " 4130", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_GETDENTS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "IPPROTO_DIVERT_INIT", " 2", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_CLOCK_SETTIME", " 88", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "IPV6_RECVDSTPORT", " 64", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGETVLAN", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_STAT", " 38", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Stat_t struct, Pad_cgo_0 [4]uint8"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "RtMetrics struct, Pad uint32"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_FUTIMES", " 77", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCSSPPPPARAMS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCSVNETID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_SELECT", " 71", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_SPACEAVAIL", " 5", null));
		mapFunc.get("syscall (openbsd-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (openbsd-amd64-cgo)",
				"FcntlFlock", new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_GETDENTS", " 99", null));
		mapConst.get("syscall (openbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MS_INVALIDATE", " 4", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MCL_CURRENT", " 1", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_RANDOM", " 1", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_FSTATFS", " 64", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "TCP_NOPUSH", " 16", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "PROT_NONE", " 0", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Dirent struct, Off int64"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_PPOLL", " 109", null));
	}

	private void build2() {
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGVNETID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "PROT_READ", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "PROT_WRITE", " 2", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "TCP_NOPUSH", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_HASSEMAPHORE", " 512", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MS_ASYNC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_UTIMES", " 76", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SizeofRtMetrics", " 56", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_GETITIMER", " 70", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)").add(
				new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "IPPROTO_DIVERT_INIT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGIFHARDMTU", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCSETVLAN", " 2149607823", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MS_SYNC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "RTF_FMASK", " 1112072", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_CLOCK_GETTIME", " 87", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)").add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)",
				"MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_LSTAT", " 40", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_FSTAT", " 53", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MCL_FUTURE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCSLIFPHYTTL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_SETTIMEOFDAY", " 68", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGLIFPHYTTL", " 3223349673", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_RENAME", " 32", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCSETVLAN", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Statfs_t struct, F_ctime uint64"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_GETRUSAGE", " 19", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_FHSTATFS", " 65", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_FREE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MS_ASYNC", " 1", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_PSELECT", " 110", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS___THRSLEEP", " 94", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_COPY", " 4", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SIOCGETVLAN", " 3223349648", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_FILE", " 0", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_GETFSSTAT", " 62", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_SETITIMER", " 69", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_FLAGMASK", " 8183", null));
		mapType.get("syscall (openbsd-amd64-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64-cgo)", "Kevent_t struct, Ident uint64"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "SYS_UTRACE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MADV_SEQUENTIAL", " 2", null));
		mapConst.get("syscall (openbsd-amd64-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64-cgo)", "MAP_INHERIT_DONATE_COPY", " 3", null));

		pkgs.add("testing");
		mapConst.putIfAbsent("testing", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("testing", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("testing", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("testing", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("testing", new HashSet<VarGoLangApiSignature>());

		mapType.get("testing").add(new TypeGoLangApiSignature("testing", "PB struct"));
		mapMethod.get("testing").add(new MethodGoLangApiSignature("testing", "*B", "RunParallel",
				new String[] { "func(*PB" }, new String[] { ")" }));
		mapMethod.get("testing").add(
				new MethodGoLangApiSignature("testing", "*PB", "Next", new String[] { "" }, new String[] { "bool" }));
		mapMethod.get("testing").add(new MethodGoLangApiSignature("testing", "*B", "SetParallelism",
				new String[] { "int" }, new String[] { "" }));

		pkgs.add("syscall (darwin-386)");
		mapConst.putIfAbsent("syscall (darwin-386)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (darwin-386)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (darwin-386)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (darwin-386)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (darwin-386)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (darwin-386)").add(new FuncGoLangApiSignature("syscall (darwin-386)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386)").add(new FuncGoLangApiSignature("syscall (darwin-386)", "Mprotect",
				new String[] { "[]uint8", " int" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386)").add(new FuncGoLangApiSignature("syscall (darwin-386)", "Munlock",
				new String[] { "[]uint8" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386)").add(new FuncGoLangApiSignature("syscall (darwin-386)", "Munlockall",
				new String[] { "" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386)").add(new FuncGoLangApiSignature("syscall (darwin-386)", "Mlockall",
				new String[] { "int" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-386)").add(new FuncGoLangApiSignature("syscall (darwin-386)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapFunc.get("syscall (darwin-386)").add(new FuncGoLangApiSignature("syscall (darwin-386)", "Mlock",
				new String[] { "[]uint8" }, new String[] { "error" }));

		pkgs.add("syscall (openbsd-386-cgo)");
		mapConst.putIfAbsent("syscall (openbsd-386-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (openbsd-386-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (openbsd-386-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (openbsd-386-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (openbsd-386-cgo)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_STATFS", " 63", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_GETTIMEOFDAY", " 67", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCBRDGDADDR", " 2166909255", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_UTRACE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_WAIT4", " 11", null));
		mapConst.get("syscall (openbsd-386-cgo)").add(
				new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "PROT_NONE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_UTRACE", " 209", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_COPY", " 4", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MCL_FUTURE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCBRDGGPARAM", " 3225184600", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_FSTAT", " 53", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGLIFPHYTTL", " 3223349673", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_SETTIMEOFDAY", " 68", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Mclpool struct, Grown int32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "IPPROTO_DIVERT_RESP", " 1", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_NOEXTEND", " 256", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Dirent struct, Off int64"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_PSELECT", " 110", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Stat_t struct, Ino uint64"));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGSPPPPARAMS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS___THRSLEEP", " 94", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_GETDENTS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "RTM_VERSION", " 5", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGETVLAN", " 3223349648", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCSLIFPHYTTL", " 2149607848", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "FdSet struct, Bits [32]uint32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_LSTAT", " 40", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_SEQUENTIAL", " 2", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "IPPROTO_DIVERT_INIT", " 2", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_GETRUSAGE", " 19", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Statfs_t struct, Pad_cgo_0 [2]uint8"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "TIOCGTSTAMP", " 1074558043", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "RtMetrics struct, Pad uint32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCSVNETID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "IP_DIVERTFL", " 4130", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MS_INVALIDATE", null, "ideal-int"));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_GETDENTS", " 99", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MS_ASYNC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "IPV6_RECVDSTPORT", " 64", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_SELECT", " 71", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGSPPPPARAMS", " 3223349652", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "PROT_READ", " 1", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_NANOSLEEP", " 91", null));
		mapFunc.get("syscall (openbsd-386-cgo)").add(new FuncGoLangApiSignature("syscall (openbsd-386-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SizeofRtMsghdr", " 96", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "BIOCSRTIMEOUT", " 2148287085", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGLIFPHYTTL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGIFHARDMTU", " 3223349669", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MCL_CURRENT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MCL_CURRENT", " 1", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_CLOCK_GETTIME", " 87", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCSETVLAN", " 2149607823", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "TCP_NOPUSH", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_UTIMENSAT", " 84", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCSSPPPPARAMS", " 2149607827", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "PROT_WRITE", " 2", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "PROT_NONE", " 0", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "IP_DIVERTFL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_PPOLL", " 109", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SizeofRtMetrics", " 56", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_GETITIMER", " 70", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_HASSEMAPHORE", " 512", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "TCP_NOPUSH", " 16", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "TIOCGSID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "RTF_FMASK", " 1112072", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_STAT", " 38", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_FSTATAT", " 42", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_RENAME", " 32", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_PRIVATE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_FILE", " 0", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MCL_FUTURE", " 2", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_CLOCK_GETRES", " 89", null));
		mapFunc.get("syscall (openbsd-386-cgo)").add(new FuncGoLangApiSignature("syscall (openbsd-386-cgo)",
				"FcntlFlock", new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (openbsd-386-cgo)").add(
				new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "IPPROTO_DIVERT_RESP", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCSETVLAN", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_FUTIMENS", " 85", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Termios struct"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SizeofIfData", " 212", null));
		mapType.get("syscall (openbsd-386-cgo)").add(
				new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Statfs_t struct, F_mntfromspec [90]int8"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCSLIFPHYTTL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_PSELECT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "TIOCGSID", " 1074033763", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_NORMAL", " 0", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Statfs_t struct, F_ctime uint64"));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Timespec struct, Sec int64"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_RANDOM", " 1", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_PPOLL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "PROT_EXEC", " 4", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MS_ASYNC", " 1", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_FHSTATFS", " 65", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_GETFSSTAT", " 62", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Dirent struct, Fileno uint64"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MS_SYNC", " 2", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_CLOCK_SETTIME", " 88", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGVNETID", " 3223349671", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_FLAGMASK", " 8183", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Dirent struct, X__d_padding [4]uint8"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_NOEXTEND", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_FUTIMES", " 77", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCSSPPPPARAMS", null, "ideal-int"));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Kevent_t struct, Data int64"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_SETITIMER", " 69", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Timeval struct, Sec int64"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_FLAGMASK", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCSVNETID", " 2149607846", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_SPACEAVAIL", " 5", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGETVLAN", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_FREE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MS_INVALIDATE", " 4", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "IPV6_RECVDSTPORT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "PROT_READ", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "BIOCGRTIMEOUT", " 1074545262", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_FSTATFS", " 64", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGVNETID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_INHERIT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SizeofIfMsghdr", " 236", null));
		mapConst.get("syscall (openbsd-386-cgo)").add(
				new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "IPPROTO_DIVERT_INIT", null, "ideal-int"));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_KEVENT", " 72", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SYS_UTIMES", " 76", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCBRDGSADDR", " 3240651076", null));
		mapType.get("syscall (openbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386-cgo)", "RtMetrics struct, Expire int64"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "SIOCGIFHARDMTU", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386-cgo)", "MS_SYNC", null, "ideal-int"));

		pkgs.add("syscall (netbsd-386)");
		mapConst.putIfAbsent("syscall (netbsd-386)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (netbsd-386)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (netbsd-386)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (netbsd-386)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (netbsd-386)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_16MB", " 402653184", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_VM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_PID", " 4096", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_FS", " 512", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_64PB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MS_SYNC", " 4", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_DEFAULT", " 1", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_FILE", " 0", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_256TB", " 805306368", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_RENAME", " 32", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_SEQUENTIAL", " 2", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MS_ASYNC", " 1", null));
		mapType.get("syscall (netbsd-386)").add(new TypeGoLangApiSignature("syscall (netbsd-386)", "Termios struct"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "PROT_READ", " 1", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_STACK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "PROT_READ", null, "ideal-int"));
		mapType.get("syscall (netbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_SPACEAVAIL", " 5", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_64KB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "PROT_EXEC", " 4", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_1TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MCL_FUTURE", " 2", null));
		mapFunc.get("syscall (netbsd-386)").add(new FuncGoLangApiSignature("syscall (netbsd-386)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_CSIGNAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_PRIVATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_CSIGNAL", " 255", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_PID", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapType.get("syscall (netbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_DEFAULT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_STACK", " 8192", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "PROT_WRITE", " 2", null));
		mapType.get("syscall (netbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MS_SYNC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_1TB", " 671088640", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_HASSEMAPHORE", " 512", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_FREE", null, "ideal-int"));
		mapFunc.get("syscall (netbsd-386)").add(new FuncGoLangApiSignature("syscall (netbsd-386)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (netbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MS_INVALIDATE", " 2", null));
		mapType.get("syscall (netbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_VFORK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_64KB", " 268435456", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MCL_FUTURE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_WIRED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_WIRED", " 2048", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_FILES", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "PROT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_FS", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_64PB", " 939524096", null));
		mapType.get("syscall (netbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_PTRACE", " 8192", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_VFORK", " 16384", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_VM", " 256", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_4GB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_16MB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_RANDOM", " 1", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_FILES", " 1024", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_PTRACE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_256TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MCL_CURRENT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "PROT_NONE", " 0", null));
		mapType.get("syscall (netbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_SIGHAND", " 2048", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MCL_CURRENT", " 1", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MS_INVALIDATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "CLONE_SIGHAND", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MS_ASYNC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386)", "MAP_ALIGNMENT_4GB", " 536870912", null));

		pkgs.add("encoding/asn1");
		mapConst.putIfAbsent("encoding/asn1", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("encoding/asn1", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("encoding/asn1", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("encoding/asn1", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("encoding/asn1", new HashSet<VarGoLangApiSignature>());

		mapMethod.get("encoding/asn1").add(new MethodGoLangApiSignature("encoding/asn1", "ObjectIdentifier", "String",
				new String[] { "" }, new String[] { "string" }));

		pkgs.add("net/http");
		mapConst.putIfAbsent("net/http", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("net/http", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("net/http", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("net/http", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("net/http", new HashSet<VarGoLangApiSignature>());

		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateHijacked", null, "ConnState"));
		mapMethod.get("net/http").add(new MethodGoLangApiSignature("net/http", "*Server", "SetKeepAlivesEnabled",
				new String[] { "bool" }, new String[] { "" }));
		mapType.get("net/http")
				.add(new TypeGoLangApiSignature("net/http", "Response struct, TLS *tls.ConnectionState"));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateClosed", " 4", null));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateHijacked", " 3", null));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateNew", " 0", null));
		mapMethod.get("net/http").add(new MethodGoLangApiSignature("net/http", "ConnState", "String",
				new String[] { "" }, new String[] { "string" }));
		mapType.get("net/http")
				.add(new TypeGoLangApiSignature("net/http", "Transport struct, TLSHandshakeTimeout time.Duration"));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateIdle", " 2", null));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateActive", " 1", null));
		mapType.get("net/http").add(new TypeGoLangApiSignature("net/http", "Server struct, ErrorLog *log.Logger"));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateActive", null, "ConnState"));
		mapType.get("net/http").add(new TypeGoLangApiSignature("net/http", "Client struct, Timeout time.Duration"));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateNew", null, "ConnState"));
		mapType.get("net/http")
				.add(new TypeGoLangApiSignature("net/http", "Server struct, ConnState func(net.Conn, ConnState)"));
		mapType.get("net/http").add(new TypeGoLangApiSignature("net/http", "ConnState int"));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateClosed", null, "ConnState"));
		mapConst.get("net/http").add(new ConstGoLangApiSignature("net/http", "StateIdle", null, "ConnState"));

		pkgs.add("sync");
		mapConst.putIfAbsent("sync", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("sync", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("sync", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("sync", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("sync", new HashSet<VarGoLangApiSignature>());

		mapMethod.get("sync").add(new MethodGoLangApiSignature("sync", "*Pool", "Put", new String[] { "interface{}" },
				new String[] { "" }));
		mapType.get("sync").add(new TypeGoLangApiSignature("sync", "Pool struct"));
		mapType.get("sync").add(new TypeGoLangApiSignature("sync", "Pool struct, New func() interface{}"));
		mapMethod.get("sync").add(new MethodGoLangApiSignature("sync", "*Pool", "Get", new String[] { "" },
				new String[] { "interface{}" }));

		pkgs.add("syscall (openbsd-amd64)");
		mapConst.putIfAbsent("syscall (openbsd-amd64)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (openbsd-amd64)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (openbsd-amd64)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (openbsd-amd64)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (openbsd-amd64)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Statfs_t struct, Pad_cgo_1 [2]uint8"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MS_ASYNC", " 1", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGIFHARDMTU", " 3223349669", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SizeofRtMsghdr", " 96", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_PPOLL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_NANOSLEEP", " 91", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_FHSTATFS", " 65", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCSVNETID", " 2149607846", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Mclpool struct, Grown int32"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Dirent struct, Off int64"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MS_SYNC", " 2", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Stat_t struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "TIOCGSID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "IPPROTO_DIVERT_INIT", " 2", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_SEQUENTIAL", " 2", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "FdSet struct, Bits [32]uint32"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "IP_DIVERTFL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_FREE", " 6", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "RtMetrics struct, Pad uint32"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_NOEXTEND", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MS_INVALIDATE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGLIFPHYTTL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "IPV6_RECVDSTPORT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGSPPPPARAMS", " 3223349652", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_FLAGMASK", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "IPPROTO_DIVERT_RESP", " 1", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCBRDGSADDR", " 3240651076", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_COPY", " 4", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_KEVENT", " 72", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS___THRSLEEP", " 94", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_UTRACE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_FILE", " 0", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Stat_t struct, Ino uint64"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_PRIVATE", null, "ideal-int"));
		mapFunc.get("syscall (openbsd-amd64)").add(new FuncGoLangApiSignature("syscall (openbsd-amd64)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_LSTAT", " 40", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "IPPROTO_DIVERT_INIT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGETVLAN", " 3223349648", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_STATFS", " 63", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGLIFPHYTTL", " 3223349673", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_GETFSSTAT", " 62", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MCL_FUTURE", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCSLIFPHYTTL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_SPACEAVAIL", " 5", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "RtMetrics struct, Expire int64"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCSETVLAN", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_RENAME", " 32", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MS_INVALIDATE", " 4", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Termios struct"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_FREE", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Statfs_t struct, F_ctime uint64"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "RTM_VERSION", " 5", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_SETITIMER", " 69", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MS_ASYNC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_FSTATFS", " 64", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "TCP_NOPUSH", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_CLOCK_GETTIME", " 87", null));
		mapFunc.get("syscall (openbsd-amd64)").add(new FuncGoLangApiSignature("syscall (openbsd-amd64)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGIFHARDMTU", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCSSPPPPARAMS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGVNETID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "IP_DIVERTFL", " 4130", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_UTIMES", " 76", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCSETVLAN", " 2149607823", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_HASSEMAPHORE", " 512", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "RTF_FMASK", " 1112072", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_GETRUSAGE", " 19", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_STAT", " 38", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_FLAGMASK", " 8183", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MS_SYNC", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Statfs_t struct, F_mntfromspec [90]int8"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_CLOCK_SETTIME", " 88", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGETVLAN", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCSLIFPHYTTL", " 2149607848", null));
		mapConst.get("syscall (openbsd-amd64)").add(
				new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_FSTAT", " 53", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCSVNETID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "IPV6_RECVDSTPORT", " 64", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "PROT_WRITE", " 2", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Kevent_t struct, Data int64"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Dirent struct, Fileno uint64"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "PROT_READ", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_FUTIMES", " 77", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_NOEXTEND", " 256", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MCL_CURRENT", " 1", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCBRDGDADDR", " 2166909255", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Timespec struct, Sec int64"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_PSELECT", " 110", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGSPPPPARAMS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_RANDOM", " 1", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Dirent struct, X__d_padding [4]uint8"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCSSPPPPARAMS", " 2149607827", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "TCP_NOPUSH", " 16", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_GETITIMER", " 70", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_SETTIMEOFDAY", " 68", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_GETDENTS", null, "ideal-int"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MCL_FUTURE", " 2", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "PROT_EXEC", " 4", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_CLOCK_GETRES", " 89", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_PPOLL", " 109", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_UTIMENSAT", " 84", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "PROT_NONE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "PROT_NONE", " 0", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_WAIT4", " 11", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Termios struct, Cc [20]uint8"));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_HASSEMAPHORE", null, "ideal-int"));
	}

	private void build3() {
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SIOCGVNETID", " 3223349671", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Kevent_t struct, Ident uint64"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SizeofRtMetrics", " 56", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_FUTIMENS", " 85", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_GETTIMEOFDAY", " 67", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "PROT_READ", " 1", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_PSELECT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "TIOCGSID", " 1074033763", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_SELECT", " 71", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_FSTATAT", " 42", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_GETDENTS", " 99", null));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "SYS_UTRACE", " 209", null));
		mapType.get("syscall (openbsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-amd64)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "IPPROTO_DIVERT_RESP", null, "ideal-int"));
		mapConst.get("syscall (openbsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-amd64)", "MCL_CURRENT", null, "ideal-int"));

		pkgs.add("syscall (linux-arm)");
		mapConst.putIfAbsent("syscall (linux-arm)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (linux-arm)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (linux-arm)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (linux-arm)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (linux-arm)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (linux-arm)").add(new FuncGoLangApiSignature("syscall (linux-arm)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (linux-arm)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm)", "Flock_t struct, Type int16"));
		mapType.get("syscall (linux-arm)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm)", "Flock_t struct, Pad_cgo_0 [4]uint8"));
		mapType.get("syscall (linux-arm)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm)", "Flock_t struct, Pad_cgo_1 [4]uint8"));
		mapFunc.get("syscall (linux-arm)").add(new FuncGoLangApiSignature("syscall (linux-arm)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapType.get("syscall (linux-arm)").add(new TypeGoLangApiSignature("syscall (linux-arm)", "Flock_t struct"));
		mapType.get("syscall (linux-arm)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm)", "Flock_t struct, Len int64"));
		mapType.get("syscall (linux-arm)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm)", "Flock_t struct, Pid int32"));
		mapType.get("syscall (linux-arm)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm)", "Flock_t struct, Start int64"));
		mapType.get("syscall (linux-arm)")
				.add(new TypeGoLangApiSignature("syscall (linux-arm)", "Flock_t struct, Whence int16"));

		pkgs.add("syscall (linux-386-cgo)");
		mapConst.putIfAbsent("syscall (linux-386-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (linux-386-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (linux-386-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (linux-386-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (linux-386-cgo)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (linux-386-cgo)").add(new FuncGoLangApiSignature("syscall (linux-386-cgo)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (linux-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-386-cgo)", "Flock_t struct, Pid int32"));
		mapType.get("syscall (linux-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-386-cgo)", "Flock_t struct"));
		mapType.get("syscall (linux-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-386-cgo)", "Flock_t struct, Len int64"));
		mapType.get("syscall (linux-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-386-cgo)", "Flock_t struct, Start int64"));
		mapType.get("syscall (linux-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-386-cgo)", "Flock_t struct, Type int16"));
		mapFunc.get("syscall (linux-386-cgo)").add(new FuncGoLangApiSignature("syscall (linux-386-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapType.get("syscall (linux-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (linux-386-cgo)", "Flock_t struct, Whence int16"));

		pkgs.add("syscall (openbsd-386)");
		mapConst.putIfAbsent("syscall (openbsd-386)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (openbsd-386)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (openbsd-386)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (openbsd-386)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (openbsd-386)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MCL_FUTURE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_GETTIMEOFDAY", " 67", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_FSTAT", " 53", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Dirent struct, X__d_padding [4]uint8"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_LSTAT", " 40", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCSLIFPHYTTL", " 2149607848", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_WAIT4", " 11", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_UTRACE", null, "ideal-int"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Kevent_t struct, Data int64"));
		mapConst.get("syscall (openbsd-386)").add(
				new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "PROT_NONE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_UTRACE", " 209", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_COPY", " 4", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGLIFPHYTTL", " 3223349673", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCBRDGDADDR", " 2166909255", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_SETTIMEOFDAY", " 68", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Timeval struct, Sec int64"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_NOEXTEND", " 256", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Stat_t struct, Ino uint64"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "IPPROTO_DIVERT_RESP", " 1", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_FREE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGSPPPPARAMS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_PSELECT", " 110", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_DONTNEED", null, "ideal-int"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS___THRSLEEP", " 94", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCBRDGGPARAM", " 3225184600", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_SETITIMER", " 69", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Termios struct, Ospeed int32"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "RTM_VERSION", " 5", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "IP_DIVERTFL", " 4130", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_GETDENTS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_SEQUENTIAL", " 2", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_GETRUSAGE", " 19", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGETVLAN", " 3223349648", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "RtMetrics struct, Expire int64"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_FLAGMASK", " 8183", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCSSPPPPARAMS", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_FUTIMES", " 77", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_NOEXTEND", null, "ideal-int"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT_SHARE", " 0", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Statfs_t struct, F_ctime uint64"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_FLAGMASK", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCSVNETID", " 2149607846", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_SPACEAVAIL", " 5", null));
		mapFunc.get("syscall (openbsd-386)").add(new FuncGoLangApiSignature("syscall (openbsd-386)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGETVLAN", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MS_INVALIDATE", " 4", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MS_SYNC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCBRDGSADDR", " 3240651076", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "PROT_READ", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGVNETID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_FSTATFS", " 64", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_KEVENT", " 72", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SizeofIfMsghdr", " 236", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Dirent struct, Fileno uint64"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_UTIMES", " 76", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "IPPROTO_DIVERT_INIT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGIFHARDMTU", null, "ideal-int"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "RtMetrics struct, Pad uint32"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_STATFS", " 63", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Termios struct, Oflag uint32"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Statfs_t struct, Pad_cgo_0 [2]uint8"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_RENAME", " 32", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_FSTATAT", " 42", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_PRIVATE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_COPY", null, "ideal-int"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_FIXED", null, "ideal-int"));
		mapFunc.get("syscall (openbsd-386)").add(new FuncGoLangApiSignature("syscall (openbsd-386)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MCL_FUTURE", " 2", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "IPPROTO_DIVERT_RESP", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCSETVLAN", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_FUTIMENS", " 85", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "BIOCGRTIMEOUT", " 1074545262", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SizeofIfData", " 212", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCSLIFPHYTTL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "TIOCGSID", " 1074033763", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_PSELECT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "IPV6_RECVDSTPORT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_RANDOM", " 1", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_PPOLL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MS_ASYNC", " 1", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_CLOCK_GETRES", " 89", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_GETFSSTAT", " 62", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGVNETID", " 3223349671", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MS_SYNC", " 2", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "PROT_EXEC", " 4", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_FILE", " 0", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_FHSTATFS", " 65", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_CLOCK_SETTIME", " 88", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "IPPROTO_DIVERT_INIT", " 2", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCSVNETID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "IPV6_RECVDSTPORT", " 64", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MS_INVALIDATE", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_SELECT", " 71", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MS_ASYNC", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGSPPPPARAMS", " 3223349652", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "PROT_READ", " 1", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_NANOSLEEP", " 91", null));
		mapType.get("syscall (openbsd-386)").add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Termios struct"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "BIOCSRTIMEOUT", " 2148287085", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_GETDENTS", " 99", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Mclpool struct, Grown int32"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Statfs_t struct, F_mntfromspec [90]int8"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MCL_CURRENT", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGLIFPHYTTL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SizeofRtMsghdr", " 96", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCGIFHARDMTU", " 3223349669", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MCL_CURRENT", " 1", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "TIOCGTSTAMP", " 1074558043", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_NORESERVE", null, "ideal-int"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Dirent struct, Off int64"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCSETVLAN", " 2149607823", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "TCP_NOPUSH", " 16", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Termios struct, Iflag uint32"));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "Timespec struct, Sec int64"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "PROT_WRITE", " 2", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_UTIMENSAT", " 84", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SIOCSSPPPPARAMS", " 2149607827", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "TCP_NOPUSH", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "IP_DIVERTFL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_PPOLL", " 109", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "PROT_NONE", " 0", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_GETITIMER", " 70", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SizeofRtMetrics", " 56", null));
		mapType.get("syscall (openbsd-386)")
				.add(new TypeGoLangApiSignature("syscall (openbsd-386)", "FdSet struct, Bits [32]uint32"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "TIOCGSID", null, "ideal-int"));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "RTF_FMASK", " 1112072", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_CLOCK_GETTIME", " 87", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "SYS_STAT", " 38", null));
		mapConst.get("syscall (openbsd-386)")
				.add(new ConstGoLangApiSignature("syscall (openbsd-386)", "MAP_HASSEMAPHORE", " 512", null));

		pkgs.add("syscall (netbsd-arm-cgo)");
		mapConst.putIfAbsent("syscall (netbsd-arm-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (netbsd-arm-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (netbsd-arm-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (netbsd-arm-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (netbsd-arm-cgo)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_WIRED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_WIRED", " 2048", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_4GB", " 536870912", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapFunc.get("syscall (netbsd-arm-cgo)").add(new FuncGoLangApiSignature("syscall (netbsd-arm-cgo)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_STACK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT", " 128", null));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Kevent_t struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_256TB", " 805306368", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_FREE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_64PB", " 939524096", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "PROT_READ", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_16MB", " 402653184", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "PROT_WRITE", " 2", null));
		mapFunc.get("syscall (netbsd-arm-cgo)").add(new FuncGoLangApiSignature("syscall (netbsd-arm-cgo)", "Fchflags",
				new String[] { "int", " int" }, new String[] { "error" }));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_64KB", " 268435456", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_64KB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_DEFAULT", " 1", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_PRIVATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ANON", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Stat_t struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_HASSEMAPHORE", " 512", null));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "PROT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_FILE", " 0", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_COPY", " 1", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_FILE", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Termios struct, Cflag uint32"));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "PROT_NONE", " 0", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_256TB", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Timeval struct, Pad_cgo_0 [4]uint8"));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_1TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_TRYFIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "SizeofIfData", " 136", null));
		mapFunc.get("syscall (netbsd-arm-cgo)").add(new FuncGoLangApiSignature("syscall (netbsd-arm-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_RANDOM", " 1", null));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Stat_t struct, Pad_cgo_1 [4]uint8"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_64PB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_RENAME", " 32", null));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_4GB", null, "ideal-int"));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Stat_t struct, Pad_cgo_2 [4]uint8"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_INHERIT_DEFAULT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_SPACEAVAIL", " 5", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_1TB", " 671088640", null));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_STACK", " 8192", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "PROT_READ", " 1", null));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Termios struct"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MADV_SEQUENTIAL", " 2", null));
		mapType.get("syscall (netbsd-arm-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-arm-cgo)", "Timespec struct, Pad_cgo_0 [4]uint8"));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "PROT_EXEC", " 4", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_PRIVATE", " 2", null));
		mapConst.get("syscall (netbsd-arm-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-arm-cgo)", "MAP_ALIGNMENT_16MB", null, "ideal-int"));

		pkgs.add("debug/macho");
		mapConst.putIfAbsent("debug/macho", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("debug/macho", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("debug/macho", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("debug/macho", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("debug/macho", new HashSet<VarGoLangApiSignature>());

		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "CpuPpc", " 18", null));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "TypeBundle", null, "Type"));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatArch struct, embedded *File"));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatFile struct, Arches []FatArch"));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "CpuArm", " 12", null));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatArchHeader struct"));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "TypeDylib", null, "Type"));
		mapMethod.get("debug/macho").add(new MethodGoLangApiSignature("debug/macho", "FatArch", "Segment",
				new String[] { "string" }, new String[] { "*Segment" }));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "TypeBundle", " 8", null));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatArch struct"));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatFile struct"));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "CpuPpc", null, "Cpu"));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatArchHeader struct, Size uint32"));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatArchHeader struct, Cpu Cpu"));
		mapMethod.get("debug/macho").add(new MethodGoLangApiSignature("debug/macho", "FatArch", "Section",
				new String[] { "string" }, new String[] { "*Section" }));
		mapType.get("debug/macho")
				.add(new TypeGoLangApiSignature("debug/macho", "FatArch struct, embedded FatArchHeader"));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "CpuPpc64", null, "Cpu"));
		mapType.get("debug/macho")
				.add(new TypeGoLangApiSignature("debug/macho", "FatArchHeader struct, Offset uint32"));
		mapVar.get("debug/macho").add(new VarGoLangApiSignature("debug/macho", "ErrNotFat", "*FormatError"));
		mapFunc.get("debug/macho").add(new FuncGoLangApiSignature("debug/macho", "NewFatFile",
				new String[] { "io.ReaderAt" }, new String[] { "*FatFile", " error" }));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "TypeDylib", " 6", null));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "CpuPpc64", " 16777234", null));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "CpuArm", null, "Cpu"));
		mapMethod.get("debug/macho").add(new MethodGoLangApiSignature("debug/macho", "FatArch", "ImportedLibraries",
				new String[] { "" }, new String[] { "[]string", " error" }));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatFile struct, Magic uint32"));
		mapMethod.get("debug/macho").add(new MethodGoLangApiSignature("debug/macho", "FatArch", "ImportedSymbols",
				new String[] { "" }, new String[] { "[]string", " error" }));
		mapType.get("debug/macho")
				.add(new TypeGoLangApiSignature("debug/macho", "FatArchHeader struct, SubCpu uint32"));
		mapFunc.get("debug/macho").add(new FuncGoLangApiSignature("debug/macho", "OpenFat", new String[] { "string" },
				new String[] { "*FatFile", " error" }));
		mapMethod.get("debug/macho").add(new MethodGoLangApiSignature("debug/macho", "*FatFile", "Close",
				new String[] { "" }, new String[] { "error" }));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "MagicFat", null, "uint32"));
		mapMethod.get("debug/macho").add(new MethodGoLangApiSignature("debug/macho", "FatArch", "DWARF",
				new String[] { "" }, new String[] { "*dwarf.Data", " error" }));
		mapType.get("debug/macho").add(new TypeGoLangApiSignature("debug/macho", "FatArchHeader struct, Align uint32"));
		mapMethod.get("debug/macho").add(new MethodGoLangApiSignature("debug/macho", "FatArch", "Close",
				new String[] { "" }, new String[] { "error" }));
		mapConst.get("debug/macho").add(new ConstGoLangApiSignature("debug/macho", "MagicFat", " 3405691582", null));

		pkgs.add("syscall (darwin-amd64-cgo)");
		mapConst.putIfAbsent("syscall (darwin-amd64-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (darwin-amd64-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (darwin-amd64-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (darwin-amd64-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (darwin-amd64-cgo)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (darwin-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-amd64-cgo)",
				"FcntlFlock", new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-amd64-cgo)",
				"Mprotect", new String[] { "[]uint8", " int" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-amd64-cgo)",
				"Munlock", new String[] { "[]uint8" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-amd64-cgo)",
				"Munlockall", new String[] { "" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-amd64-cgo)",
				"Mlockall", new String[] { "int" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64-cgo)")
				.add(new FuncGoLangApiSignature("syscall (darwin-amd64-cgo)", "SendmsgN",
						new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" },
						new String[] { "int", " error" }));
		mapFunc.get("syscall (darwin-amd64-cgo)").add(new FuncGoLangApiSignature("syscall (darwin-amd64-cgo)", "Mlock",
				new String[] { "[]uint8" }, new String[] { "error" }));

		pkgs.add("syscall (netbsd-386-cgo)");
		mapConst.putIfAbsent("syscall (netbsd-386-cgo)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (netbsd-386-cgo)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (netbsd-386-cgo)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (netbsd-386-cgo)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (netbsd-386-cgo)", new HashSet<VarGoLangApiSignature>());

		mapType.get("syscall (netbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386-cgo)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_NORESERVE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_4GB", " 536870912", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_STACK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_WILLNEED", " 3", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_NONE", " 2", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "PROT_READ", " 1", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_SEQUENTIAL", " 2", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MS_ASYNC", " 1", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_PTRACE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_DONTNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_CSIGNAL", " 255", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_FREE", " 6", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_FILES", " 1024", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_SHARED", " 1", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_64PB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_FIXED", " 16", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_FIXED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_SHARE", " 0", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_SPACEAVAIL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_NORMAL", " 0", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MS_INVALIDATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_1TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_FILE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_VM", " 256", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "PROT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_HASSEMAPHORE", null, "ideal-int"));
		mapType.get("syscall (netbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386-cgo)", "Termios struct, Ispeed int32"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_TRYFIXED", " 1024", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ANON", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MS_SYNC", " 4", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_VM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_PRIVATE", " 2", null));
		mapFunc.get("syscall (netbsd-386-cgo)").add(new FuncGoLangApiSignature("syscall (netbsd-386-cgo)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_HASSEMAPHORE", " 512", null));
		mapConst.get("syscall (netbsd-386-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_DONATE_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_STACK", " 8192", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_64KB", " 268435456", null));
		mapType.get("syscall (netbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386-cgo)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "PROT_WRITE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_4GB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_SHARED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "PROT_NONE", " 0", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_256TB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_DONTNEED", " 4", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MCL_CURRENT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)").add(
				new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_256TB", " 805306368", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_RANDOM", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_FILES", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MCL_CURRENT", " 1", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_SHARE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_WILLNEED", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_NONE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MS_ASYNC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_WIRED", null, "ideal-int"));
		mapFunc.get("syscall (netbsd-386-cgo)").add(new FuncGoLangApiSignature("syscall (netbsd-386-cgo)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (netbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386-cgo)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_PTRACE", " 8192", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_16MB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_SEQUENTIAL", null, "ideal-int"));
		mapType.get("syscall (netbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386-cgo)", "Termios struct, Iflag uint32"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_RANDOM", " 1", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_DEFAULT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_NORESERVE", " 64", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT", " 128", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "PROT_WRITE", " 2", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "PROT_READ", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ANON", " 4096", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "PROT_EXEC", " 4", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_SIGHAND", " 2048", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MCL_FUTURE", " 2", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_SIGHAND", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_COPY", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_RENAME", " 32", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "PROT_EXEC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MCL_FUTURE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_RENAME", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_FS", null, "ideal-int"));
		mapType.get("syscall (netbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386-cgo)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_PID", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_DEFAULT", " 1", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_COPY", " 1", null));
		mapType.get("syscall (netbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386-cgo)", "Termios struct, Ospeed int32"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_FS", " 512", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_FILE", " 0", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT_DONATE_COPY", " 3", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_VFORK", " 16384", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_PRIVATE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_CSIGNAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_PID", " 4096", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MS_SYNC", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_1TB", " 671088640", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_FREE", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_64KB", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_SPACEAVAIL", " 5", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_INHERIT", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_16MB", " 402653184", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MS_INVALIDATE", " 2", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "CLONE_VFORK", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MADV_NORMAL", null, "ideal-int"));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_WIRED", " 2048", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_ALIGNMENT_64PB", " 939524096", null));
		mapConst.get("syscall (netbsd-386-cgo)")
				.add(new ConstGoLangApiSignature("syscall (netbsd-386-cgo)", "MAP_TRYFIXED", null, "ideal-int"));
		mapType.get("syscall (netbsd-386-cgo)")
				.add(new TypeGoLangApiSignature("syscall (netbsd-386-cgo)", "Termios struct"));

		pkgs.add("unicode");
		mapConst.putIfAbsent("unicode", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("unicode", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("unicode", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("unicode", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("unicode", new HashSet<VarGoLangApiSignature>());

		mapConst.get("unicode").add(new ConstGoLangApiSignature("unicode", "Version", " \"6.3.0\"", null));

		pkgs.add("go/build");
		mapConst.putIfAbsent("go/build", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("go/build", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("go/build", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("go/build", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("go/build", new HashSet<VarGoLangApiSignature>());

		mapType.get("go/build").add(new TypeGoLangApiSignature("go/build", "Package struct, MFiles []string"));

		pkgs.add("syscall (darwin-amd64)");
		mapConst.putIfAbsent("syscall (darwin-amd64)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (darwin-amd64)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (darwin-amd64)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (darwin-amd64)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (darwin-amd64)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (darwin-amd64)").add(new FuncGoLangApiSignature("syscall (darwin-amd64)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64)").add(new FuncGoLangApiSignature("syscall (darwin-amd64)", "Mprotect",
				new String[] { "[]uint8", " int" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64)").add(new FuncGoLangApiSignature("syscall (darwin-amd64)", "Munlock",
				new String[] { "[]uint8" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64)").add(new FuncGoLangApiSignature("syscall (darwin-amd64)", "Munlockall",
				new String[] { "" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64)").add(new FuncGoLangApiSignature("syscall (darwin-amd64)", "Mlockall",
				new String[] { "int" }, new String[] { "error" }));
		mapFunc.get("syscall (darwin-amd64)").add(new FuncGoLangApiSignature("syscall (darwin-amd64)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapFunc.get("syscall (darwin-amd64)").add(new FuncGoLangApiSignature("syscall (darwin-amd64)", "Mlock",
				new String[] { "[]uint8" }, new String[] { "error" }));

		pkgs.add("syscall (freebsd-amd64)");
		mapConst.putIfAbsent("syscall (freebsd-amd64)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (freebsd-amd64)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (freebsd-amd64)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (freebsd-amd64)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (freebsd-amd64)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "ENOTRECOVERABLE", null, "Errno"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "IPPROTO_MPLS", " 137", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "WTRAPPED", " 32", null));
		mapFunc.get("syscall (freebsd-amd64)").add(new FuncGoLangApiSignature("syscall (freebsd-amd64)", "Accept4",
				new String[] { "int", " int" }, new String[] { "int", " Sockaddr", " error" }));
		mapType.get("syscall (freebsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64)", "Termios struct, Ospeed uint32"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "ENOTRECOVERABLE", " 95", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "WTRAPPED", null, "ideal-int"));
		mapType.get("syscall (freebsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64)", "Termios struct, Cflag uint32"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "RTF_GWFLAG_COMPAT", " 2147483648", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "DLT_MATCHING_MAX", " 246", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "EV_DROP", " 4096", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_ACCEPT4", null, "ideal-int"));
		mapFunc.get("syscall (freebsd-amd64)").add(new FuncGoLangApiSignature("syscall (freebsd-amd64)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_BINDAT", null, "ideal-int"));
		mapType.get("syscall (freebsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64)", "Termios struct, Lflag uint32"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "NAME_MAX", " 255", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SO_VENDOR", " 2147483648", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "AF_INET6_SDP", " 42", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "AF_INET6_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "AF_MAX", " 42", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "NAME_MAX", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_CHFLAGSAT", null, "ideal-int"));
		mapType.get("syscall (freebsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64)", "Termios struct, Oflag uint32"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MSG_CMSG_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_PIPE2", " 542", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MAP_ALIGNMENT_SHIFT", " 24", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SOCK_CLOEXEC", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "RTF_GWFLAG_COMPAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MAP_ALIGNED_SUPER", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "WEXITED", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "DLT_NG40", " 244", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_CHFLAGSAT", " 540", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "DLT_NFC_LLCP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SO_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "EV_DROP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "WEXITED", " 16", null));
		mapType.get("syscall (freebsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64)", "Termios struct, Iflag uint32"));
		mapType.get("syscall (freebsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64)", "Termios struct, Cc [20]uint8"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MAP_ALIGNMENT_SHIFT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_PIPE2", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "AF_INET_SDP", " 40", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_ACCEPT4", " 541", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SOCK_NONBLOCK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MAP_32BIT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "ELAST", " 96", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SIGLIBRT", " 33", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "TCP_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "DLT_MPEG_2_TS", " 243", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "RT_NORTREF", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "O_CLOEXEC", " 1048576", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "RT_NORTREF", " 2", null));
	}

	private void build4() {
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "DLT_NG40", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MAP_ALIGNMENT_MASK", " -16777216", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MAP_ALIGNED_SUPER", " 16777216", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "DLT_MPEG_2_TS", null, "ideal-int"));
		mapFunc.get("syscall (freebsd-amd64)").add(new FuncGoLangApiSignature("syscall (freebsd-amd64)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MSG_CMSG_CLOEXEC", " 262144", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SOCK_CLOEXEC", " 268435456", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_PROCCTL", " 544", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "IPPROTO_MPLS", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MAP_32BIT", " 524288", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "MAP_ALIGNMENT_MASK", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_PROCCTL", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_BINDAT", " 538", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "TCP_VENDOR", " 2147483648", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "AF_INET_SDP", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "DLT_NFC_LLCP", " 245", null));
		mapType.get("syscall (freebsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64)", "Termios struct, Ispeed uint32"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "EOWNERDEAD", null, "Errno"));
		mapType.get("syscall (freebsd-amd64)")
				.add(new TypeGoLangApiSignature("syscall (freebsd-amd64)", "Termios struct"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SOCK_NONBLOCK", " 536870912", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_CONNECTAT", " 539", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "EOWNERDEAD", " 96", null));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SYS_CONNECTAT", null, "ideal-int"));
		mapConst.get("syscall (freebsd-amd64)")
				.add(new ConstGoLangApiSignature("syscall (freebsd-amd64)", "SIGLIBRT", null, "Signal"));

		pkgs.add("syscall (windows-amd64)");
		mapConst.putIfAbsent("syscall (windows-amd64)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (windows-amd64)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (windows-amd64)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (windows-amd64)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (windows-amd64)", new HashSet<VarGoLangApiSignature>());

		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "SIO_KEEPALIVE_VALS", null, "ideal-int"));
		mapType.get("syscall (windows-amd64)")
				.add(new TypeGoLangApiSignature("syscall (windows-amd64)", "TCPKeepalive struct, Interval uint32"));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "WSAECONNRESET", null, "Errno"));
		mapType.get("syscall (windows-amd64)")
				.add(new TypeGoLangApiSignature("syscall (windows-amd64)", "TCPKeepalive struct"));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "ERROR_NETNAME_DELETED", " 64", null));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "ERROR_MORE_DATA", null, "Errno"));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "SIO_KEEPALIVE_VALS", " 2550136836", null));
		mapFunc.get("syscall (windows-amd64)").add(new FuncGoLangApiSignature("syscall (windows-amd64)",
				"NewCallbackCDecl", new String[] { "interface{}" }, new String[] { "uintptr" }));
		mapType.get("syscall (windows-amd64)")
				.add(new TypeGoLangApiSignature("syscall (windows-amd64)", "TCPKeepalive struct, OnOff uint32"));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "IOC_VENDOR", " 402653184", null));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "IOC_VENDOR", null, "ideal-int"));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "WSAECONNRESET", " 10054", null));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "ERROR_MORE_DATA", " 234", null));
		mapType.get("syscall (windows-amd64)")
				.add(new TypeGoLangApiSignature("syscall (windows-amd64)", "TCPKeepalive struct, Time uint32"));
		mapConst.get("syscall (windows-amd64)")
				.add(new ConstGoLangApiSignature("syscall (windows-amd64)", "ERROR_NETNAME_DELETED", null, "Errno"));

		pkgs.add("syscall (linux-amd64)");
		mapConst.putIfAbsent("syscall (linux-amd64)", new HashSet<ConstGoLangApiSignature>());
		mapFunc.putIfAbsent("syscall (linux-amd64)", new HashSet<FuncGoLangApiSignature>());
		mapMethod.putIfAbsent("syscall (linux-amd64)", new HashSet<MethodGoLangApiSignature>());
		mapType.putIfAbsent("syscall (linux-amd64)", new HashSet<TypeGoLangApiSignature>());
		mapVar.putIfAbsent("syscall (linux-amd64)", new HashSet<VarGoLangApiSignature>());

		mapFunc.get("syscall (linux-amd64)").add(new FuncGoLangApiSignature("syscall (linux-amd64)", "FcntlFlock",
				new String[] { "uintptr", " int", " *Flock_t" }, new String[] { "error" }));
		mapType.get("syscall (linux-amd64)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64)", "Flock_t struct, Type int16"));
		mapType.get("syscall (linux-amd64)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64)", "Flock_t struct, Pad_cgo_1 [4]uint8"));
		mapType.get("syscall (linux-amd64)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64)", "Flock_t struct, Whence int16"));
		mapType.get("syscall (linux-amd64)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64)", "Flock_t struct, Start int64"));
		mapFunc.get("syscall (linux-amd64)").add(new FuncGoLangApiSignature("syscall (linux-amd64)", "SendmsgN",
				new String[] { "int", " []uint8", " []uint8", " Sockaddr", " int" }, new String[] { "int", " error" }));
		mapType.get("syscall (linux-amd64)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64)", "Flock_t struct, Pad_cgo_0 [4]uint8"));
		mapType.get("syscall (linux-amd64)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64)", "Flock_t struct, Pid int32"));
		mapType.get("syscall (linux-amd64)").add(new TypeGoLangApiSignature("syscall (linux-amd64)", "Flock_t struct"));
		mapType.get("syscall (linux-amd64)")
				.add(new TypeGoLangApiSignature("syscall (linux-amd64)", "Flock_t struct, Len int64"));

	}

}